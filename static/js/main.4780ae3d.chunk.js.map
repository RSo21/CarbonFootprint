{"version":3,"sources":["assets/kyle-glenn.jpg","assets/foot.png","assets/def.png","assets/reduce.jpeg","assets/larm-rmah.jpg","components/Navigation.jsx","components/Content.jsx","components/About.jsx","components/Footer.jsx","components/ScrollBtn.jsx","pages/Main.jsx","api/quizQuestions.js","components/Question.jsx","components/QuestionCount.jsx","components/AnswerOption.jsx","components/Quiz.jsx","components/Result.jsx","components/CarbonEnd.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","href","exact","to","Content","src","Forest","alt","About","id","Foot","Def","Reduce","Footer","ScrollBtn","style","backgroundColor","Component","Main","quizQuestions","question","answers","type","content","Question","props","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","key","questionId","questionTotal","answerOptions","map","Result","quizResult","CarbonEnd","state","answersCount","result","handleAnswerSelected","bind","answersArray","this","setState","array","currentIndex","length","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","sum","i","parseFloat","Fern","renderResult","renderQuiz","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4780ae3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kyle-glenn.c4ca4b9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/foot.5f548887.png\";","module.exports = __webpack_public_path__ + \"static/media/def.5963b991.png\";","module.exports = __webpack_public_path__ + \"static/media/reduce.be9f04f5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/larm-rmah.3e181954.jpg\";","import {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\n\n\nconst Navigation = () => {\n    return (\n    <header className = \"page-header\">\n        <div className = \"col-full col-full-mob nav\">\n            <div className = \"logo\"><a href = \"#\">CarbonFootprint</a></div>\n            <nav className = \"page-nav\"><i className = \"icon-menu\"></i>\n                <ul className = \"page-nav-list\">\n                    <li>\n                        <a href = \"#\">HOME</a>\n                    </li>\n                    <li>\n                        <a href = \"#about\">ABOUT</a>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/questions/energy\" >START</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact to=\"/contact\" >CONTACT</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    </header>\n    )\n}\nexport default Navigation;","import {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nimport Forest from '../assets/kyle-glenn.jpg';\n\n\nconst Content  = () => {\n    return (\n    <section className = \"content-main col-full-mob\">\n        <div className = \"content-foto\" >\n            <img src = {Forest} alt = \"forest\" />\n        </div>\n        <div className = \"content-element\">\n            <div className = \"content-text\">\n                <p>Do you know...</p>\n                <p>What Is your Carbon Footprint?</p>\n                \n            </div>\n            <div className = \"content-buttons\">\n                <button className = \"content-button\"> <NavLink exact to=\"/questions/energy\" >START <i className = \"icon-play\"></i></NavLink></button>\n                <button className = \"content-button\"><a href = \"#about\" >READ MORE</a> <i className = \"icon-down-open\"></i></button>\n            </div>\n        </div>\n    </section>\n    )\n}\nexport default Content;\n","import React from \"react\";\n\nimport Foot from '../assets/foot.png';\nimport Def from '../assets/def.png';\nimport Reduce from '../assets/reduce.jpeg';\n\n\nconst About  = () => {\n    return (\n    <section className = \"page-about\">\n         <div className = \"col-full\">\n             <div className = \"container\">\n                 <div className = \"page-about-img\">\n                     <img id = \"about\" src = {Foot} alt = \"foot\" />\n                 </div>\n                 \n                 <div className = \"page-about-def\">\n                     <p className = \"page-about-question\">What is a carbon footprint?</p>\n                     <div className = \"page-about-row\">\n                        <p className = \"page-about-answer\">A carbon footprint is the amount of greenhouse gases—primarily carbon dioxide—released into \n                        the atmosphere by a particular human activity. A carbon footprint can be a broad meaasure \n                        or be applied to the actions of an individual, a family, an event, an organization, or even \n                        an entire nation. It is usually measured as tons of CO2 emitted per year, a number that can \n                        be supplemented by tons of CO2-equivalent gases, including methane, nitrous oxide, and other \n                        greenhouse gases.</p>\n                        <img src = {Def} alt = \"def\"/>\n                     </div>\n                     \n                 </div>\n\n                 <div className = \"page-about-calc\">\n                     <p className = \"page-about-question\">How can I calculate my carbon footprint?</p>\n                     <div className = \"page-about-row\">\n                     <div className = \"page-about-quote\">\n                 <p>You can't control everything, but being conscious of your carbon footprint helps.</p>\n                 </div>\n                     <p className = \"page-about-answer\">Although adding up one’s individual carbon footprint can be difficult, online \n                        calculators can do some of the work for you, giving a rough estimate of your carbon footprint \n                        based on the size of your household, the efficiency of your appliances, how much you drive or fly, \n                        what you eat.\n                        Fossil fuel use and electricity consumption play a major role in your carbon footprint.\n                        This isn't perfect, but it is a good way to measure your activities so you can understand roughly \n                        how much CO2 they generate and take steps to reduce your carbon footprint.</p>\n                    </div>\n                 </div>\n\n                 <div className = \"page-about-reduce\">\n                     <p className = \"page-about-question\">How can I reduce my carbon footprint?</p>\n                     <div className = \"page-about-row\">\n                        <p className = \"page-about-answer\">Methods of reducing your carbon footprint include driving more-efficient vehicles (or making sure that\n                        your current vehicles are properly maintained), taking public transportation, using energy-efficient\n                        appliances, insulating your home to reduce heating and air conditioning costs, consuming food that\n                        doesn't require as much transportation, and eating less meat, which has a higher carbon footprint\n                        than fruits and vegetables.</p>\n                        <img src = {Reduce} alt = \"reduce\"/>\n                     </div>\n                     \n                 </div>\n                 \n                 \n             </div>\n             <hr className = \"page-about-line\"></hr>\n         </div>\n    </section>\n    )\n}\nexport default About;","import React from \"react\";\n\n\n\nconst Footer  = () => {\n    return (\n    <footer className = \"page-footer\">\n        <div className = \"col-full\">\n            <p>Created with <i className = \"icon-heart-empty\"></i></p>\n            <p>&#169; Roksana Sobczak </p>\n        </div>\n\n    </footer>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\n class ScrollBtn extends Component {\n    render() {\n        return (\n            <div>\n                <ScrollUpButton style={{backgroundColor: \"#57B850\"}}/>\n            </div>\n        );\n    }\n}\n\nexport default ScrollBtn;","import React from 'react';\nimport Navigation from '../components/Navigation'\nimport Content from '../components/Content'\nimport About from '../components/About'\nimport Footer from '../components/Footer'\n\nimport ScrollBtn from '../components/ScrollBtn'\n\nimport {Component} from 'react';\n\n\nclass Main extends Component{\n    // state = {\n    //     footprintList: [],\n    // }\n\n    // componentDidMount() {\n    //     fetch('http://localhost:4000/questions')\n    //     .then((response) => {\n    //         return response.json();\n\n    //     })\n    //     .then((data) => {\n    //         this.setState({\n    //             footprintList: data,\n    //         })\n    //     });\n    // }\n\n\n    render(){\n        return(\n            <>\n                <Navigation />\n                <Content />\n                <About />\n                <Footer />\n                <ScrollBtn />\n            </>\n        );\n    }\n}\n\nexport default Main;\n","let quizQuestions = [\n  {\n      question: \"ENERGY\",\n      answers: [\n          {\n              type: 0.2,\n              content: \"I live in a building that was built to be energy efficient.\"\n          },\n          {\n              type: 0.8,\n              content: \"I live in a normal building but I use renewable energy for heating.\"\n          },\n          {\n              type: 2,\n              content: \"I live in a normal building that is heated with oil or natural gas.\"\n          }\n      ]\n  },\n  {\n      question: \"WARM WATER\",\n      answers: [\n          {\n              type: 0.6,\n              content: \"I generally don't shower for longer that 5 minutes and I rarely take a bath.\"\n          },\n          {\n              type: 1.1,\n              content: \"I love standing under the shower for a good 20 minutes - but in exchange I rarely have baths.\"\n          },\n          {\n              type: 1.7,\n              content: \"I often have baths - but in exchange I shower less often and only have short showers.\"\n          }\n      ]\n  },\n  {\n      question: \"PERSONAL TRANSPORT\",\n      answers: [\n          {\n              type: 0.8,\n              content: \"I almost always go by public transport, cycle or walk.\"\n          },\n          {\n              type: 2.2,\n              content: \"I use the car and public transport about the same amount.\"\n          },\n          {\n              type: 2.6,\n              content: \"I almost always drive by car.\"\n          }\n      ]\n  },\n  {\n      question: \"FLYING\",\n      answers: [\n          {\n              type: 0,\n              content: \"I never fly\"\n          },\n          {\n              type: 0.8,\n              content: \"TI fly max. two short distance flights or one long distance every couple of years\"\n          },\n          {\n              type: 4.7,\n              content: \"I fly one short distance and one long distance in a year.\"\n          }\n      ]\n  },\n  {\n      question: \"FOOD\",\n      answers: [\n          {\n              type: 1,\n              content: \"I only eat vegetarian food.\"\n          },\n          {\n              type: 1.2,\n              content: \"I eat meat 2 to 3 times a week.\"\n          },\n          {\n              type: 2,\n              content: \"I eat meat almost every day - mostly from an unknown source.\"\n          }\n      ]\n  },\n  {\n    question: \"SHOPPING\",\n    answers: [\n        {\n            type: 0.7,\n            content: \"I very rarely buy new products, clothes or decorative items.\"\n        },\n        {\n            type: 1.1,\n            content: \"I buy new products, clothes or decorative things every now and again.\"\n        },\n        {\n            type: 1.3,\n            content: \"I buy a new appliance, decoration, clothes or shoes every week.\"\n        }\n    ]\n}\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return (\n      <h2 className = \"start-type\">{props.content}</h2> \n  );\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n      <p className = \"start-question-count\">Question <span>{props.counter}</span> of <span>{props.total}</span></p>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className = \"start-answer\">\n      <input \n        type=\"radio\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.number.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    \n      <div className = \"page-start-text\" key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul>\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n   \n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Result(props) {\n  return (\n    <div className = \"page-start-text\">\n      <p className = \"start-type\">Your CarbonFootprint: <strong>{props.quizResult}</strong>!</p>\n    </div>   \n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.number.isRequired\n};\n\nexport default Result;","import React, { Component } from 'react';\nimport quizQuestions from '../api/quizQuestions';\nimport Quiz from './Quiz';\nimport Result from './Result';\n\nimport Fern from '../assets/larm-rmah.jpg';\n\n\nclass CarbonEnd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: 0\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const answerOptions = quizQuestions.map(question =>\n      this.answersArray(question.answers)\n    );\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: answerOptions[0]\n    });\n  }\n\n  answersArray(array) {\n    let currentIndex = array.length;\n\n    while (0 !== currentIndex) {\n      currentIndex -= 1;\n    }\n\n    return array;\n  }\n\n  //ustawianie odpowiedzi i następnego pytania\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 400);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 400);\n    }\n  }\n\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n  \n//zwiekszanie stanu licznika\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  //obliczamy sume zaznaczonych odp\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    //console.log(answersCountKeys); // wyświetla tablice z punktami zaznaczonych odpowiedzi\n    \n    let sum = 0;\n    for (let i = 0; i <answersCountKeys.length; i++){\n      sum += parseFloat(answersCountKeys[i]);\n      \n    }\n    //console.log(sum); //zwraca sume zaznaczonych odp\n    return sum;\n    \n  }\n\n  setResults() { \n      this.setState({ result: this.getResults() });\n  }\n\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n          <div className = \"page-start col-full\">\n              <div className = \"page-start-img\">\n                <img className = \"fernImg\" src = {Fern} alt = \"fern\"/> \n              </div>\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n          </div> \n    );\n  }\n}\n\nexport default CarbonEnd;","// import React, {Component, useState, useEffect} from 'react';\n\n// import './App.css';\n// import Main from './pages/Main';\n\n// import \"../src/scss/main.scss\";\n\n// import \"../src/fontello/css/fontello.css\"\n\n\n// import Question from './pages/Question';\n// import Questions from './pages/Questions';\n\n\n// import {useHistory} from 'react-router-dom'\n\n// import { Route, Switch } from 'react-router-dom';\n\n// const App = () => {\n\n//   const [questions, setQuestions] = useState([]);\n  \n//   let history = useHistory();\n\n//   useEffect(() => {\n//     fetch('http://localhost:4000/questions')\n//         .then((response)=>{\n//             return response.json();\n//         })\n//         .then((questions)=>{\n//             // console.log(questions)\n//             setQuestions(questions);\n//         });\n//   }, []);\n\n//   const onPrevQuestion = (currentQuestionId) =>{\n//     console.log(\"onprev\");\n//     const currentQuestionIndex = questions.findIndex(\n//       (question) => question.id === currentQuestionId\n//     );\n//     const prevQuestionIndex = currentQuestionIndex - 1;\n    \n//     history.push(`/questions/${questions[prevQuestionIndex].id}`);\n//   }\n\n//   const onNextQuestion = (currentQuestionId) =>{\n//     console.log(\"onnext\");\n//     const currentQuestionIndex = questions.findIndex(\n//       (question) => question.id === currentQuestionId\n//     );\n//     const nextQuestionIndex = currentQuestionIndex + 1;\n\n//     history.push(`/questions/${questions[nextQuestionIndex].id}`);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//             <Switch>\n//                 <Route exact path=\"/\" component={Main}/>\n//                 <Route exact path=\"/questions/:id\" render={(props)=> {\n//                   return <Question onPrevQuestion={onPrevQuestion} \n//                   onNextQuestion={onNextQuestion} \n                  \n//                   {...props}/>\n//                 }}/>\n//                 <Route exact path=\"/questions\" render={()=> {\n//                   return <Questions questions={questions}/>\n//                 }}/>\n//             </Switch>\n//     </div>\n//   );\n// }\n// export default App;\n\n\n\nimport React, { Component } from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport \"../src/scss/main.scss\";\nimport \"../src/fontello/css/fontello.css\"\n\nimport Main from './pages/Main';\nimport CarbonEnd from './components/CarbonEnd';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className = \"App\">\n        <Switch>\n            <Route exact path=\"/CarbonFootprint\" component={Main}/>\n            <Route exact path=\"/questions/energy\" component = {CarbonEnd}/>  \n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}